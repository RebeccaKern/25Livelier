<script type="text/javascript">
var selected_row;
var filter = function(k, v){
  filter_dict[k] = v;
  reset_table();
}

var set_selected = function(tr, value){
  console.log(tr[0])
  if (selected_row){
    selected_row.style.backgroundColor = 'inherit';
  }
  tr[0].style.backgroundColor = '#FF5252';
  selected_row = tr[0];
  $("#room_id").val(value);
}

var reset_selected = function(){
  console.log('reset');
  console.log(selected_row);
  $(selected_row).click();
}

var show_building_rooms = function(building_id){
  var new_form_elem
  filter_dict['room_id'] = null;
  switch (building_id){
    case '1':
      new_form_elem = 'for_bh';
      filter_dict['building'] = "Baker Hall";
      break;
    case '2':
      new_form_elem = 'for_ph';
      filter_dict['building'] = "Porter Hall";
      break;
    case '3':
      new_form_elem = 'for_weh';
      filter_dict['building'] = "Wean Hall";
      break;
    default:
      new_form_elem = 'for_dh';
      filter_dict['building'] = "Doherty Hall";
      break;
  }
  all_ids = ['for_bh', 'for_ph', 'for_weh', 'for_dh'];
  for (var i = 0; i < 4; i++){
    var bldg = all_ids[i];
    if (bldg == new_form_elem){
      document.getElementById(bldg).style.display = 'block';
    } else {
      document.getElementById(bldg).style.display = 'none';
    }
  }
  reset_table();
}

var update_room = function(room){
  filter_dict['room_id'] = room;
  console.log(filter_dict);
  reset_table();
}

var time_conflicts = function(t_array){
  var start_hour = parseInt(filter_dict.start_time.slice(0, 2)) + (12 * (filter_dict.start_time.slice(5, 7) === "PM"));
  if (start_hour === 24){ start_hour = 12; }
  var start_min = parseInt(filter_dict.start_time.slice(3, 5));
  var end_hour = parseInt(filter_dict.end_time.slice(0, 2)) + (12 * (filter_dict.end_time.slice(5, 7) === "PM"));
  var end_min = parseInt(filter_dict.end_time.slice(3, 5));
  if (t_array[1] < start_hour || (t_array[1] == start_hour && t_array[2] <= start_min)){
    if (t_array[3] > end_hour || (t_array[3] == end_hour && t_array[4] >= end_min))
      return true;
  }
  if (t_array[1] > start_hour || (t_array[1] == start_hour && t_array[2] >= start_min)){
    if (t_array[1] < end_hour || (t_array[1] == start_hour && t_array[2] <= end_min)){
      return true;
    }
  }
  if (t_array[3] < end_hour || (t_array[3] == end_hour && t_array[4] <= end_min)){
    if (t_array[3] > start_hour || (t_array[3] == start_hour && t_array[4] >= start_min)){
      return true;
    }
  }
  return false;
}

var dates_equal = function(d1, d2){
  return (d1.getYear() == d2.getYear()) && (d1.getMonth() == d2.getMonth()) && (d1.getDay() == d2.getDay())
}

var filter_all_rooms = function(all_rooms){
  if (filter_dict.event_number_attending){
    console.log(filter_dict.event_number_attending);
    all_rooms = all_rooms.filter(room => (room.max_capacity >= filter_dict.event_number_attending));
    console.log(all_rooms);
  }
  if (filter_dict.building){
    all_rooms = all_rooms.filter(room => room.building.name == filter_dict.building);
  }
  if (filter_dict.building && filter_dict.room_id){
    console.log("both");
    all_rooms = all_rooms.filter(room => (room.id == filter_dict.room_id) && (room.building.name == filter_dict.building));
  }
  if (filter_dict.date && filter_dict.start_time && filter_dict.end_time){
    console.log('date')
    var tmp_rooms = all_rooms.map(room => room.events_for_room.map(e => [e.date, new Date(e.start_time).getHours(), new Date(e.start_time).getMinutes(), new Date(e.end_time).getHours(), new Date(e.end_time).getMinutes(), e.id]));
    var blacklist = [];
    for (var i = 0; i < tmp_rooms.length; i++){
      for (var k = 0; k < tmp_rooms[i].length; k++){
        var mod = new Date(tmp_rooms[i][k][0]);
        mod.setDate(mod.getDate() + 1);
        var cmp = new Date(filter_dict.date);
        if (dates_equal(mod, cmp) && time_conflicts(tmp_rooms[i][k])){
          blacklist.push(tmp_rooms[i][k][5]);
        }
      }
    }
    console.log(blacklist);
    all_rooms = all_rooms.filter(room => !(blacklist.includes(room.id)))
  }

  return all_rooms;
}

var reset_table = function(){
  var room_table = document.getElementById('room_table');
  var header_string = "<h4>Available Rooms</h4>";
  if (filter_dict['date']){
    header_string = "<h4>Available Rooms on " + filter_dict['date'] +"</h4>";
  }
  var new_table = "<div id='room_table'>"+header_string+"<table class='striped highlight'><thead><tr><th>Building</th><th>Room</th><th>Capacity</th></tr></th><tbody>";
  var all_rooms = <%= raw Room.all.map{|a| a.to_json(:include => [:building], :methods => :events_for_room)} %>;
  all_rooms = all_rooms.map(room => JSON.parse(room));
  all_rooms = filter_all_rooms(all_rooms);
  for (var elem = 0; elem < all_rooms.length; elem++){
    console.log(all_rooms[elem]);
    new_table += `<tr onclick='javascript: set_selected($(this), ${all_rooms[elem].id})'><td>`+all_rooms[elem].building.name+"</td><td>"+all_rooms[elem].location_address+"</td><td>"+all_rooms[elem].max_capacity+"</td></tr>";
  }
  new_table += "</tbody></table></div>"
  $(room_table).replaceWith(new_table);
  reset_selected();
}
</script>

<div class="row">
  <div class="col s5">
  <%= form_with(model: event, local: true) do |form| %>
    <% if event.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(event.errors.count, "error") %> prohibited this event from being saved:</h2>

        <ul>
        <% event.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
        </ul>
      </div>
    <% end %>

    <%= form.hidden_field :user_id, value: current_user.id %>
    <%= form.hidden_field :room_id, {id: "room_id"} %>
    <%= form.hidden_field :organization_id, {id: "organization_id"} %>

    <div class="input-field">
      <select id='orgs' onchange="javascript: $('#organization_id').val($('#orgs').val());">
        <option value="" disabled selected>Choose an Organization</option>
      <% for org in current_user.organizations %>
        <option value='<%=org.id%>'><%= org.name %></option>
      <% end %>
      </select>
      <label>Choose an Organization</label>
    </div>


    <div class="input-field">
      <%= form.label 'Event Name' %>
      <%= form.text_field :name, id: :event_name, :onkeyup=>"javascript: filter('event_name', $('#event_name').val());" %>
    </div>

    <div class="input-field">
      <select id="building_select" onchange="javascript: show_building_rooms($('#building_select').val())">
        <option value="" disabled selected>Choose a Building</option>
      <% for building in Building.all %>
        <option value='<%=building.id%>'><%= building.name %></option>
      <% end %>
      </select>
      <label>Choose a Building</label>
    </div>

    <div id='for_dh' class="input-field hidden">
      <select id='dh_select' onchange="javascript: update_room($('#dh_select').val())">
        <option value="" disabled selected>Choose a Room</option>
      <% for room in Room.for_dh %>
        <option value="<%=room.id%>"><%= room.building.name + " " + room.location_address %></option>
      <% end %>
      </select>
      <label>Choose a Room</label>
    </div>

    <div id='for_ph' class="input-field hidden">
      <select id='ph_select' onchange="javascript: update_room($('#ph_select').val())">
        <option value="" disabled selected>Choose a Room</option>
      <% for room in Room.for_ph %>
        <option value='<%=room.id%>'><%= room.building.name + " " + room.location_address %></option>
      <% end %>
      </select>
      <label>Choose a Room</label>
    </div>

    <div id='for_bh' class="input-field hidden">
      <select id='bh_select' onchange="javascript: update_room($('#bh_select').val())">
        <option value="" disabled selected>Choose a Room</option>
      <% for room in Room.for_bh %>
        <option value='<%=room.id%>'><%= room.building.name + " " + room.location_address %></option>
      <% end %>
      </select>
      <label>Choose a Room</label>
    </div>

    <div id='for_weh' class="input-field hidden">
      <select id='weh_select' onchange="javascript: update_room($('#weh_select').val())">
        <option value="" disabled selected>Choose a Room</option>
      <% for room in Room.for_weh %>
        <option value='<%=room.id%>'><%= room.building.name + " " + room.location_address %></option>
      <% end %>
      </select>
      <label>Choose a Room</label>
    </div>

    <div class="input-field">
      <%= form.label :number_attending %>
      <%= form.number_field :number_attending, id: :event_number_attending, :onkeyup=>"javascript: filter('event_number_attending', $('#event_number_attending').val());" %>
    </div>

    <hr/>

    <div class="input-field">
      <%= form.label :date %>
      <%= form.text_field :date, prompt: "Event Date", id: :event_date, class: "datepicker", :value => (form.object.date.strftime('%B %d, %Y') if form.object.date != nil), :onChange=>"javascript: filter('date', $('#event_date').val());" %>
    </div>

    <div class="input-field">
      <%= form.label :start_time %>
      <%= form.text_field :start_time, id: :event_start_time, class: "timepicker", :onChange=>"javascript: filter('start_time', $('#event_start_time').val());" %>
    </div>

    <div class="input-field">
      <%= form.label :end_time %>
      <%= form.text_field :end_time, id: :event_end_time, class: "timepicker", :onChange=>"javascript: filter('end_time', $('#event_end_time').val());" %>    
    </div>

    <hr/>

    <div class="input-field">
      <%= form.label :description %>
      <%= form.text_field :description, id: :event_description %>
    </div>

    <div class="actions">
      <%= form.submit %>
    </div>
  <% end %>
  </div>

  <div class="col s5">
    <div id="room_table">
      <h4>Available Rooms</h4>
        <table class='striped highlight'>
          <thead>
            <tr>
              <th>Building</th>
              <th>Room</th>
              <th>Capacity</th>
            </tr>
          </thead>
        <tbody>
        <% for room in Room.all %>
          <tr onclick="javascript: set_selected($(this), <%= room.id %>)">
            <td><%= room.building.name %></td>
            <td><%= room.location_address %></td>
            <td><%= room.max_capacity %></td>
          </tr>
        <% end %>        
        </tbody>
      </table>
    </div>
  </div>
</div>
